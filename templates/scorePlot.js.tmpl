
function prepareScorePlotData(dataPoints, startTime, endTime) {

  var length
  for (var i = 0; i < dataPoints.length && dataPoints[i][0] <= endTime; i++) { 
    length = i+1
  }

  var results = []

  for (var i = 0; i < length; i++) {
    var p = dataPoints[i]
    var date = new Date(p[0]*1000)

    var userScore = p[4]
    var scoreClass = ""

    if (userScore > 0) {
      scoreClass = "gain"
    } else if (userScore < 0) {
      scoreClass = "loss"
    }


    var direction = p[5]
    var voteType = "upvote"
    if (direction == -1) {
      voteType = "downvote"
    }

    var entryUpvoteRateString = p[6]

    // , p.EntryUpvoteRateString(), p.CurrentUpvoteRateString(), p.ExitUpvoteRateString()

    // p[1] rounded to two decimal places
    results[i] = [i, p[1], p[2], 
      Math.round(p[1] * 100) / 100
      + "<span class='story-title'>\n" + p[3] + "</span>\n"

      + "<span style='margin-left: 1px;' class='vote " + voteType + "d'>\n"
        + "<span class='showifvoted price'>" + entryUpvoteRateString + "</span>\n"
        + "<span style='margin-left: 1px;' class='showifvoted gainorloss " + scoreClass + "'>" + userScore + "</span>\n"
      + "</span>" 
      ]
  }
  return results
}

var chart
function scorePlot(dataPoints, startTime, endTime) {
  var plotDiv = document.getElementById('score_plot_div')

  var data = new google.visualization.DataTable();
  data.addColumn('number', 'i');
//  data.addColumn('number', 'QN Rank');
  data.addColumn('number', 'Score');
  // data.addColumn('string', 'Position ID');
  data.addColumn({type: 'string', role: 'annotationText'});
  data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
  // data.addColumn('string', 'Story Title');


  dataPoints = prepareScorePlotData(dataPoints, startTime, endTime)

  console.log("Sample data point", dataPoints[0]) 

  data.addRows(dataPoints);


  // https://developers.google.com/chart/interactive/docs/gallery/linechart#configuration-options
  var options = {
    isStacked:true,
    series: {
          0: {
          areaOpacity: 1,
          color: '#EF9A9A',
          type: 'area',
          visibleInLegend: false              
          }
        },
    backgroundColor: {fill: 'transparent'},
    dataOpacity: 0.85,
    // hAxis: {
    //   title: 'Date',
    //   logScale: false,
    //   // viewWindow: {
    //   //   min: (startTime-submissionTime)/3600,
    //   //   max: (endTime-submissionTime)/3600,
    //   // }
    // },
    vAxis: {
      title: 'Score',
      // logScale: true,
      // direction: -1,
      // viewWindow: {
      //   max: 1,
      //   min: 91
      // },
      // ticks: [1,2,4,8,16,32,64,{v: 91, f: "> 90"}],
    },


annotations: {
    textStyle: {
         color: 'black',
         fontSize: 11,
     },
     alwaysOutside: true,
     style: "point",
},    
    // interpolateNulls: false, 
//     series: {
//       0: {pointShape: 'diamond', pointSize: 5, interpolateNulls: false},
//       1: {pointShape: 'circle', pointSize: 3, interpolateNulls: false},
//       2: {pointShape: 'square', pointSize: 3, interpolateNulls: false},
//       3: {pointShape: 'square', pointSize: 3, interpolateNulls: false},
// //            4: {pointShape: 'square', pointSize: 0},
// //            5: {pointShape: 'square', pointSize: 0}
//     },

    // lineDashStyle: [1,1],
    // lineWidth: 1,
    // colors: ['black', '#FF6600', "#AF7FDF", "#6FAEAE", "green","pink"],
    // colors: ['#0089F4', '#FF6600', "#AF7FDF", "#6FAEAE", "green","pink"],
    chartArea:{left:60, top:20, bottom: 20, right: 0},
    height: 275,
    width: 800,
    legend: { position: 'bottom' },
    crosshair: { trigger: 'both' },

    tooltip: {isHtml: true},


    title: "Score",


    // annotationsWidth: 0,
    // displayAnnotationsFilter: false,
    // fill: 50,
    // allowHtml: true,
  };

  var chart = new google.visualization.LineChart(plotDiv);
  // chart = new google.visualization.AnnotationChart(plotDiv);

  // google.visualization.events.addListener(chart, 'rangechange', rangechange_handler);
  google.visualization.events.addListener(chart, 'select', select_handler);


  chart.draw(data, options);


  function select_handler(e) {
    console.log("In select handler", e)
    console.log(chart.getSelection())
    var n = chart.getSelection()[0].row
    window.location.hash = '#position-' + scorePlotData[n][2]

    // zoomIn(n)
  }

}

function clickPositionLabel(i) {
  zoomIn(scorePlotData.length-i-1)
}

function zoomIn(i) {
  var mid = i - 1
  var lower = i - 1
  var upper = i + 1 

  if (lower < 0) {
    lower = 0
  }
  if (upper > scorePlotData.length-1) {
    upper = scorePlotData.length-1
  }

  var lowerTime = scorePlotData[lower][0]
  var midTime = scorePlotData[i][0]
  var upperTime = scorePlotData[upper][0]

  var windowLength = 3600
  if( (upperTime - midTime) > (midTime - lowerTime) ) {
    // if( (upperTime - midTime) > 3600 ) {
      windowLength = (upperTime - midTime)
    // }
  } else {
    windowLength = (midTime - lowerTime)
  }
  upperTime = midTime + windowLength
  lowerTime = midTime - windowLength

  position = scorePlotData[i]
  chart.setVisibleChartRange(new Date(lowerTime*1000), new Date(upperTime*1000)) 
}


