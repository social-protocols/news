
async function vote(id, direction) {

  console.log("Vote", id, direction)
  var response = await navigator.locks.request("vote-" + id, async (lock) => {

    // Default options are marked with *
    return await fetch("/vote", {
      method: 'POST',
      mode: 'cors',
      cache: 'no-cache',
      credentials: 'same-origin',
      headers: {
        'Content-Type': 'application/json'
      },
      redirect: 'follow',
      referrerPolicy: 'no-referrer',
      body: JSON.stringify({storyID: id, direction: direction})
    });

  });
  
  console.log("Response from vote endpoint", response, id, direction)

  return response.json()
}


async function toggleUpvote(id) {
  console.log("toggling upvote", id)

  // console.log(response.json())

  var element = document.getElementById("vote-" + id)

  if (element.classList.contains("upvoted")) {
    var response = await vote(id, 0)
    console.log("Response clear vote", response)
    if (response.error||"" != "") {
      console.log("Error setting response", response)
      return
    }
    element.classList.remove("upvoted", "voted");
    return
  }

  var response = await vote(id, 1)
  if (response.error||"" != "") {
    console.log("Error setting upvote", response)
    return
  }

  element.classList.remove("upvoted", "voted");
  console.log("Response set vote", response)

  element.classList.add("upvoted", "voted");
  element.classList.remove("downvoted");

  element.getElementsByClassName("price")[0].getElementsByClassName("upvoterate")[0].innerHTML = response.entryUpvoteRate.toFixed(2)

  var userScoreElem = element.getElementsByClassName("gainorloss")[0]
  userScoreElem.innerHTML = ""

}



async function toggleDownvote(id) {
  console.log("Toggle downvote", id)

  var element = document.getElementById("vote-" + id)
  if (element.classList.contains("downvoted")) {
    var response = await vote(id, 0)
    console.log("Response clear vote", response)
    if (response.error||"" != "") {
      console.log("Error setting response", response)
      return
    }
    element.classList.remove("downvoted", "voted");
    return
  }

  var response = await vote(id, -1)
  if (response.error||"" != "") {
    console.log("Error setting downvote", response)
    return
  }

  element.classList.add("downvoted", "voted");
  element.classList.remove("upvoted");

  element.getElementsByClassName("price")[0].getElementsByClassName("upvoterate")[0].innerHTML = response.entryUpvoteRate.toFixed(2)

  var userScoreElem = element.getElementsByClassName("gainorloss")[0]
  userScoreElem.innerHTML = ""


}

function setVotes() {
  if (userID == undefined) {
    return;
  }

  var elements = document.getElementsByClassName("vote")
  for (var i = 0; i < elements.length; i++) {
    elements[i].classList.add("logged-in")
  }

  for (var i = 0; i < positions.length; i++) {
    // find the story details element for this story
    var storyID = positions[i][0]
    var direction = positions[i][1]
    var currentUpvoteRate = positions[i][2]
    var entryUpvoteRate = positions[i][3]
    var userScore  = positions[i][4]

    console.log("SEtting position", storyID, direction)

    if (direction == 0) {
      continue;
    }

    var element = document.getElementById("vote-" + storyID)

    if (element == null) {
      console.warn("Didn't find story on page", storyID)
      continue;
    }

    // console.log("Element",element)
    if (direction == 1) {
      element.classList.add("upvoted", "voted");
    } else if (direction == -1) {
      element.classList.add("downvoted", "voted");
    }

    console.log("SEtting upvote rate", entryUpvoteRate)

    console.log("Got element", storyID, element)
    element.getElementsByClassName("price")[0].getElementsByClassName("upvoterate")[0].innerHTML = entryUpvoteRate.toFixed(2)



    var userScoreString = userScore.toFixed(2)
    if ( Math.abs(userScore) < .01 ) {
      userScoreString = ""
    }
    else if (userScore > 0) {
      userScoreString = "+" + userScoreString
    }
    var userScoreElem = element.getElementsByClassName("gainorloss")[0]
    userScoreElem.innerHTML = userScoreString

    if (userScore > 0) {
      userScoreElem.classList.add("gain")
    } else if (userScore < 0) {
      userScoreElem.classList.add("loss")      
    }



  }

}
